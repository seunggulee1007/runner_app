name: Flutter CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.8.1'
          channel: 'stable'
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔍 Verify formatting
        run: dart format --set-exit-if-changed .

      - name: 📊 Analyze code
        run: flutter analyze

      - name: 🧪 Run unit tests
        run: flutter test --no-pub --coverage --test-randomize-ordering-seed random

      - name: 📈 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false

      - name: 🏗️ Build APK (Android)
        run: flutter build apk --debug --no-pub

      - name: 📤 Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk

  code_quality:
    name: Code Quality Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.8.1'
          channel: 'stable'

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔍 Run static analysis
        run: |
          echo "## Code Quality Report 📊" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          flutter analyze > analysis.txt 2>&1 || true
          if grep -q "No issues found!" analysis.txt; then
            echo "✅ **No issues found!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Issues detected:**" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            cat analysis.txt >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📈 Generate test coverage report
        run: |
          flutter test --coverage
          echo "### Test Coverage 🎯" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Coverage report generated. Check Codecov for detailed metrics." >> $GITHUB_STEP_SUMMARY

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔒 Run security scan
        run: |
          echo "## Security Scan 🔒" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          # Check for hardcoded secrets
          if grep -r "sk_" . --exclude-dir={.git,build,ios,android} || \
             grep -r "api_key" . --exclude-dir={.git,build,ios,android} || \
             grep -r "password" . --exclude-dir={.git,build,ios,android}; then
            echo "⚠️ **Potential secrets detected!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **No obvious secrets detected**" >> $GITHUB_STEP_SUMMARY
          fi

          # Check .env file is in .gitignore
          if grep -q "\.env" .gitignore; then
            echo "✅ **.env file is properly ignored**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **.env file is NOT in .gitignore!**" >> $GITHUB_STEP_SUMMARY
          fi

